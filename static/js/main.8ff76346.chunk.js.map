{"version":3,"sources":["GoodsList.tsx","types/filter.ts","App.tsx","services/good.ts","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","name","id","Filter","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","Default","_useState4","filter","setFilter","useEffect","fetch","then","response","json","AllGoods","First5Goods","sort","good1","good2","localeCompare","slice","RedGoods","getGoods","_jsxs","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CACLC,MAAOF,EAAKE,OACZJ,SAEDE,EAAKG,MANDH,EAAKI,GAOP,KAEJ,ECpBKC,EAAM,SAANA,GAAM,OAANA,EAAM,oBAANA,EAAM,0BAANA,EAAM,oBAANA,EAAM,WAANA,CAAM,MCOX,IAAMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCX,EAAKa,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA4BJ,mBAAiBH,EAAOQ,SAAQC,EAAAJ,YAAAE,EAAA,GAArDG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAMxB,OAJAG,qBAAU,YCLL,SAAkBF,GACvB,OAAOG,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAOA,EAASC,MAClB,IACCF,MAAK,SAACvB,GACL,OAAQmB,GACN,KAAKV,EAAOiB,SACV,OAAO1B,EAET,KAAKS,EAAOkB,YACV,OAAO3B,EACJ4B,MAAK,SAACC,EAAOC,GAAK,OAAKD,EAAMtB,KAAKwB,cAAcD,EAAMvB,KAAK,IAC3DyB,MAAM,EAAG,GAEd,KAAKvB,EAAOwB,SACV,OAAOjC,EAAMmB,QAAO,SAAAf,GAAI,MAAmB,QAAfA,EAAKE,KAAe,IAElD,QACE,MAAO,GAEb,GACJ,EDhBI4B,CAASf,GAAQI,KAAKR,EACxB,GAAG,CAACI,IAGFgB,eAAA,OAAKC,UAAU,MAAKlC,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEoC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMlB,EAAUX,EAAOiB,SAAS,EAACxB,SAC3C,mBAIDD,cAAA,UACEoC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMlB,EAAUX,EAAOkB,YAAY,EAACzB,SAC9C,uBAIDD,cAAA,UACEoC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMlB,EAAUX,EAAOwB,SAAS,EAAC/B,SAC3C,mBAIDD,cAACH,EAAS,CAACE,MAAOA,MAGxB,EE3CAuC,IAASC,OACPvC,cAACS,EAAG,IACJ+B,SAASC,eAAe,Q","file":"static/js/main.8ff76346.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{\n          color: good.color,\n        }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","export enum Filter {\n  AllGoods = 'AllGoods',\n  First5Goods = 'First5Goods',\n  RedGoods = 'RedGoods',\n  Default = '',\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getGoods } from './services/good';\nimport { Filter } from './types/filter';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [filter, setFilter] = useState<Filter>(Filter.Default);\n\n  useEffect(() => {\n    getGoods(filter).then(setGoods);\n  }, [filter]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setFilter(Filter.AllGoods)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setFilter(Filter.First5Goods)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setFilter(Filter.RedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import { Good } from '../types/Good';\nimport { Filter } from '../types/filter';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getGoods(filter: Filter): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      return response.json();\n    })\n    .then((goods: Good[]) => {\n      switch (filter) {\n        case Filter.AllGoods:\n          return goods;\n\n        case Filter.First5Goods:\n          return goods\n            .sort((good1, good2) => good1.name.localeCompare(good2.name))\n            .slice(0, 5);\n\n        case Filter.RedGoods:\n          return goods.filter(good => good.color === 'red');\n\n        default:\n          return [];\n      }\n    });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}